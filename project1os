#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
#include<semaphore.h>

char buff[24];
//sem_t mutex;

//struct sempahore *sa; 
struct sempahore *sb;

void fb(void *ptr);
void fa(void *ptr);
void fc(void *ptr);

void fb(void *ptr)
{
    sleep(1);
    char *msgg=(char *)ptr;
    printf("%s\n",msgg);
    
    sem_wait(&mutex);
    sprintf(buff,"%s","calling function fb()");
    printf("%s\n",buff);
    sem_post(&mutex);
    
    pthread_exit(0);
}

void fa(void *ptr)
{
    char *msgg=(char *)ptr;
    printf("%s\n",msgg);
    
    sem_wait(&mutex);
    sprintf(buff,"%s","calling function fa()");
    printf("%s\n",buff);
    sem_post(&mutex);
   
    
    pthread_exit(0);
    
}

void fc(void *ptr)
{
    sleep(2);
    char *msgg=(char *)ptr;
    printf("%s\n",msgg);
    
    sem_wait(&mutex);
    sprintf(buff,"%s","calling function fc()");
    printf("%s\n",buff);
    sem_post(&mutex);
    
    pthread_exit(0);
}

int main(int argc,char *argv[])
{
    pthread_t thread1;
    pthread_t thread2;
    
    char *msgg1="thread1";
    char *msgg2="thread2";
    
    sem_init(&mutex,0,1);
   // pthread_create(&thread1,NULL,(void *) &fb, (void*) msgg1);
    pthread_create(&thread2,NULL,(void *) &fa, (void*) msgg2);
    pthread_create(&thread2,NULL,(void *) &fc, (void*) msgg2);
        
    pthread_join(thread1,NULL);
    pthread_join(thread2,NULL);
    
    sem_destroy(&mutex);
    return 0;
        
}

